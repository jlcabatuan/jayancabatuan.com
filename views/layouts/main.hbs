<!DOCTYPE html>
<html lang="en">
    <head>
	<meta charset="UTF-8"/>
        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>jayan cabatuan.</title>
        <meta name="description" content="Website of Jayan Cabatuan" />
        <meta name="keywords" content="jayan, jayan cabatuan, jayancabatuan, jcabatuan, photography, landscape, landscape photography, landscape photography philippines, astrophotography, astro, astro philippines, astrophotography philippines, picturesque philippines, picturesque pinas, street philippines, street photography philippines, pinas, philippines, landscape, urban philippines, batanes" />
        <meta name="author" content="jayan cabatuan" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta property="og:image" content="/uploads/images/medium/{{first.file.filename}}" />
        <meta property="og:description" content="Website of Jayan Cabatuan, photographer, software engineer, mama's boy." />
        <meta property="og:title" content="jayan cabatuan." />
        <link rel="apple-touch-icon" sizes="57x57" href="/public/images/apple-icon-57x57.png">
        <link rel="apple-touch-icon" sizes="60x60" href="/public/images/apple-icon-60x60.png">
        <link rel="apple-touch-icon" sizes="72x72" href="/public/images/apple-icon-72x72.png">
        <link rel="apple-touch-icon" sizes="76x76" href="/public/images/apple-icon-76x76.png">
        <link rel="apple-touch-icon" sizes="114x114" href="/public/images/apple-icon-114x114.png">
        <link rel="apple-touch-icon" sizes="120x120" href="/public/images/apple-icon-120x120.png">
        <link rel="apple-touch-icon" sizes="144x144" href="/public/images/apple-icon-144x144.png">
        <link rel="apple-touch-icon" sizes="152x152" href="/public/images/apple-icon-152x152.png">
        <link rel="apple-touch-icon" sizes="180x180" href="/public/images/apple-icon-180x180.png">
        <link rel="icon" type="image/png" sizes="192x192"  href="/public/images/android-icon-192x192.png">
        <link rel="icon" type="image/png" sizes="32x32" href="/public/images/favicon-32x32.png">
        <link rel="icon" type="image/png" sizes="96x96" href="/public/images/favicon-96x96.png">
        <link rel="icon" type="image/png" sizes="16x16" href="/public/images/favicon-16x16.png">
        <link rel="manifest" href="/public/images/manifest.json">
        <meta name="msapplication-TileColor" content="#ffffff">
        <meta name="msapplication-TileImage" content="/public/images/ms-icon-144x144.png">
        <meta name="theme-color" content="#ffffff">

        <link rel="stylesheet" type="text/css" href="/public/css/style.css"/>
        <link rel="stylesheet" type="text/css" href="/public/font/font-awesome-4.3.0/css/font-awesome.min.css" />
        <!-- <link rel="stylesheet" type="text/css" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" /> -->
        <!-- Core CSS file -->
        <link rel="stylesheet" href="/npm/photoswipe/dist/photoswipe.css">

        <!-- Skin CSS file (styling of UI - buttons, caption, etc.)
             In the folder of skin CSS file there are also:
             - .png and .svg icons sprite,
             - preloader.gif (for browsers that do not support CSS animations) -->
        <link rel="stylesheet" href="/npm/photoswipe/dist/default-skin/default-skin.css">

		<script src="/public/js/modernizr.custom.70736.js"></script>
		<noscript><link rel="stylesheet" type="text/css" href="/public/css/noJS.css"/></noscript>
		<!--[if lte IE 7]><style>.main{display:none;} .support-note .note-ie{display:block;}</style><![endif]-->
    <style>
    {{#if loggedIn}}
    .loggedIn {
      color: #00E800;
    }
    {{/if}}
    @media screen and (min-width: 0px) and (max-width: 550px) {
      .hide-on-small { display: none; }  /* hide it on small screens */
      .show-on-small { display: block; }
      .main > header h1 span.small-on-small { font-size: 16px; }
    }
    @media screen and (min-width: 551px) {
      .hide-on-big { display: none; }  /* hide it on small screens */
    }
    .gamma-caption, .gamma-exif { display: none; }
    .pswp__caption__center { text-align: center; max-width: 80%; }
    .exif { font-weight: normal; font-size: 12px; }
    </style>
    </head>
    <body>
        <div class="container">

			<div class="main">
				<header class="clearfix">
          <div>
  		       <h1><a href="/">jayan cabatuan</a><a class="loggedIn" href="/secure">.</a><span class="small-on-small"><!--Perpetually on vacation mode.-->Photographer, software dev, mama's boy.</span></h1>
           </div>
           <div class="hide-on-small" style="float:right;">
             <i class="fa fa-envelope-o" aria-hidden="true"></i> <a href="mailto:jcabatuan@gmail.com">jcabatuan@gmail.com</a><br>
             <i class="fa fa-instagram" aria-hidden="true"></i> <a href="https://instagram.com/jayancabatuan">jayancabatuan</a><br>
             <i class="fa fa-facebook-official" aria-hidden="true"></i> <a href="https://facebook.com/jcabatuan">jcabatuan</a>
           </div>

           <div class="hide-on-big show-on-small" style="float:right;">
             <a href="mailto:jcabatuan@gmail.com"><i class="fa fa-envelope-o" aria-hidden="true"></i></a><br>
             <a href="https://instagram.com/jayancabatuan"><i class="fa fa-instagram" aria-hidden="true"></i></a><br>
             <a href="https://facebook.com/jcabatuan"><i class="fa fa-facebook-official" aria-hidden="true"></i></a>
           </div>

					<div class="support-note">
						<span class="note-ie">Sorry, only modern browsers.</span>
					</div>

				</header>

				{{{body}}}

			</div><!--/main-->
		</div>

    <!-- Root element of PhotoSwipe. Must have class pswp. -->
    <div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">

        <!-- Background of PhotoSwipe.
             It's a separate element as animating opacity is faster than rgba(). -->
        <div class="pswp__bg"></div>

        <!-- Slides wrapper with overflow:hidden. -->
        <div class="pswp__scroll-wrap">

            <!-- Container that holds slides.
                PhotoSwipe keeps only 3 of them in the DOM to save memory.
                Don't modify these 3 pswp__item elements, data is added later on. -->
            <div class="pswp__container">
                <div class="pswp__item"></div>
                <div class="pswp__item"></div>
                <div class="pswp__item"></div>
            </div>

            <!-- Default (PhotoSwipeUI_Default) interface on top of sliding area. Can be changed. -->
            <div class="pswp__ui pswp__ui--hidden">

                <div class="pswp__top-bar">

                    <!--  Controls are self-explanatory. Order can be changed. -->

                    <div class="pswp__counter"></div>

                    <button class="pswp__button pswp__button--close" title="Close (Esc)"></button>

                    <button class="pswp__button pswp__button--share" title="Share"></button>

                    <button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>

                    <button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>

                    <!-- Preloader demo http://codepen.io/dimsemenov/pen/yyBWoR -->
                    <!-- element will get class pswp__preloader--active when preloader is running -->
                    <div class="pswp__preloader">
                        <div class="pswp__preloader__icn">
                          <div class="pswp__preloader__cut">
                            <div class="pswp__preloader__donut"></div>
                          </div>
                        </div>
                    </div>
                </div>

                <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
                    <div class="pswp__share-tooltip"></div>
                </div>

                <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)">
                </button>

                <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)">
                </button>

                <div class="pswp__caption">
                    <div class="pswp__caption__center"></div>
                </div>

            </div>

        </div>

    </div>
		<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
		<script src="/public/js/jquery.masonry.min.js"></script>
		<script src="/public/js/jquery.history.js"></script>
		<script src="/public/js/js-url.min.js"></script>
		<script src="/public/js/jquerypp.custom.js"></script>

    <!-- Core JS file -->
    <script src="/npm/photoswipe/dist/photoswipe.min.js"></script>

    <!-- UI JS file -->
    <script src="/npm/photoswipe/dist/photoswipe-ui-default.min.js"></script>


		<script src="/public/js/gamma.js"></script>
		<script type="text/javascript">

			$(function() {

      //
				var GammaSettings = {
						// order is important!
						viewport : [ {
							width : 1200,
							columns : 5
						}, {
							width : 900,
							columns : 4
						}, {
							width : 500,
							columns : 3
						}, {
							width : 320,
							columns : 2
						}, {
							width : 0,
							columns : 2
						} ]
				};

				Gamma.init( GammaSettings, fncallback );

				function fncallback() {

					// $( '#loadmore' ).show().on( 'click', function() {
          //
					// 	++page;
					// 	var newitems = items[page-1]
					// 	if( page <= 1 ) {
          //
					// 		Gamma.add( $( newitems ) );
          //
					// 	}
					// 	if( page === 1 ) {
          //
					// 		$( this ).remove();
          //
					// 	}
          //
					// } );

				}


      var initPhotoSwipeFromDOM = function(gallerySelector) {

          // parse slide data (url, title, size ...) from DOM elements
          // (children of gallerySelector)
          var parseThumbnailElements = function(el) {
              var thumbElements = el.childNodes,
                  numNodes = thumbElements.length,
                  items = [],
                  figureEl,
                  linkEl,
                  size,
                  item;

              for(var i = 0; i < numNodes; i++) {

                  figureEl = thumbElements[i]; // <figure> element

                  // include only element nodes
                  if(figureEl.nodeType !== 1) {
                      continue;
                  }

                  linkEl = figureEl.children[0]; // <a> element

                  size = linkEl.getAttribute('data-size').split('x');

                  // create slide object
                  item = {
                      src: linkEl.getAttribute('href'),
                      w: parseInt(size[0], 10),
                      h: parseInt(size[1], 10)
                  };



                  if(figureEl.children.length > 1) {
                      // <figcaption> content
                      // item.title = figureEl.children[1].innerHTML;
                      var title = figureEl.children[1].innerHTML;
                      var caption = figureEl.children[2].innerHTML;
                      var exif = figureEl.children[3].innerHTML.split(',');
                      var description = '<h3>' + title + ' <span class="exif">';
                      var shutter;
                      if(exif.length > 0 && exif[0].length > 5) {
                        if(exif[4] % 1 == 0) {
                          shutter = exif[4] + 's';
                        } else {
                          shutter = '1/' + Math.round(1/exif[4]) + 's';
                        }
                        description += '&nbsp;&nbsp;•&nbsp;&nbsp;<i class="icon icon-camera" aria-hidden="true"></i><span> '+ exif[0] +'</span>';
                        description += ' <i class="icon icon-iso" aria-hidden="true"></i><span> '+ exif[3] + '</span>';
                        description += ' <i class="icon icon-focal_length" aria-hidden="true"></i><span> '+ exif[1] +'mm</span>';
                        description += ' <i class="icon icon-aperture" aria-hidden="true"></i><span> '+ exif[2] +'</span>';
                        description += ' <i class="icon icon-exposure_time" aria-hidden="true"></i><span> '+ shutter||exif[4] +'</span>';

                      }
                      description += '</span></h3>';
                      // item.title = figureEl.children[1].innerHTML;
                      item.title = description + caption;
                  }

                  if(linkEl.children.length > 0) {
                      // <img> thumbnail element, retrieving thumbnail url
                      item.msrc = linkEl.children[0].getAttribute('src');
                  }

                  item.el = figureEl; // save link to element for getThumbBoundsFn
                  items.push(item);
              }

              return items;
          };

          // find nearest parent element
          var closest = function closest(el, fn) {
              return el && ( fn(el) ? el : closest(el.parentNode, fn) );
          };

          // triggers when user clicks on thumbnail
          var onThumbnailsClick = function(e) {
              e = e || window.event;
              e.preventDefault ? e.preventDefault() : e.returnValue = false;

              var eTarget = e.target || e.srcElement;

              // find root element of slide
              var clickedListItem = closest(eTarget, function(el) {
                  // return (el.tagName && el.tagName.toUpperCase() === 'FIGURE');
                  return (el.tagName && el.tagName.toUpperCase() === 'LI');
              });

              if(!clickedListItem) {
                  return;
              }

              // find index of clicked item by looping through all child nodes
              // alternatively, you may define index via data- attribute
              var clickedGallery = clickedListItem.parentNode,
                  childNodes = clickedListItem.parentNode.childNodes,
                  numChildNodes = childNodes.length,
                  nodeIndex = 0,
                  index;

              for (var i = 0; i < numChildNodes; i++) {
                  if(childNodes[i].nodeType !== 1) {
                      continue;
                  }

                  if(childNodes[i] === clickedListItem) {
                      index = nodeIndex;
                      break;
                  }
                  nodeIndex++;
              }



              if(index >= 0) {
                  // open PhotoSwipe if valid index found
                  openPhotoSwipe( index, clickedGallery );
              }
              return false;
          };

          // parse picture index and gallery index from URL (#&pid=1&gid=2)
          var photoswipeParseHash = function() {
              var hash = window.location.hash.substring(1),
              params = {};

              if(hash.length < 5) {
                  return params;
              }

              var vars = hash.split('&');
              for (var i = 0; i < vars.length; i++) {
                  if(!vars[i]) {
                      continue;
                  }
                  var pair = vars[i].split('=');
                  if(pair.length < 2) {
                      continue;
                  }
                  params[pair[0]] = pair[1];
              }

              if(params.gid) {
                  params.gid = parseInt(params.gid, 10);
              }

              return params;
          };

          var openPhotoSwipe = function(index, galleryElement, disableAnimation, fromURL) {
              var pswpElement = document.querySelectorAll('.pswp')[0],
                  gallery,
                  options,
                  items;

              items = parseThumbnailElements(galleryElement);

              // define options (if needed)
              options = {

                  // define gallery index (for URL)
                  galleryUID: galleryElement.getAttribute('data-pswp-uid'),

                  getThumbBoundsFn: function(index) {
                      // See Options -> getThumbBoundsFn section of documentation for more info
                      var thumbnail = items[index].el.getElementsByTagName('img')[0], // find thumbnail
                          pageYScroll = window.pageYOffset || document.documentElement.scrollTop,
                          rect = thumbnail.getBoundingClientRect();

                      return {x:rect.left, y:rect.top + pageYScroll, w:rect.width};
                  }

              };

              // PhotoSwipe opened from URL
              if(fromURL) {
                  if(options.galleryPIDs) {
                      // parse real index when custom PIDs are used
                      // http://photoswipe.com/documentation/faq.html#custom-pid-in-url
                      for(var j = 0; j < items.length; j++) {
                          if(items[j].pid == index) {
                              options.index = j;
                              break;
                          }
                      }
                  } else {
                      // in URL indexes start from 1
                      options.index = parseInt(index, 10) - 1;
                  }
              } else {
                  options.index = parseInt(index, 10);
              }

              // exit if index not found
              if( isNaN(options.index) ) {
                  return;
              }

              if(disableAnimation) {
                  options.showAnimationDuration = 0;
              }

              // Pass data to PhotoSwipe and initialize it
              gallery = new PhotoSwipe( pswpElement, PhotoSwipeUI_Default, items, options);
              gallery.init();
          };

          // loop through all gallery elements and bind events
          var galleryElements = document.querySelectorAll( gallerySelector );

          for(var i = 0, l = galleryElements.length; i < l; i++) {
              galleryElements[i].setAttribute('data-pswp-uid', i+1);
              galleryElements[i].onclick = onThumbnailsClick;
          }

          // Parse URL and open gallery if it contains #&pid=3&gid=1
          var hashData = photoswipeParseHash();
          if(hashData.pid && hashData.gid) {
              openPhotoSwipe( hashData.pid ,  galleryElements[ hashData.gid - 1 ], true, true );
          }
        };

        // execute above function
        initPhotoSwipeFromDOM('.gamma-gallery');
			});


		</script>
	</body>
</html>
